//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace practice_project.ServiceReference4 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDetails", Namespace="http://schemas.datacontract.org/2004/07/WindowsSocialApp")]
    [System.SerializableAttribute()]
    public partial class UserDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference4.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ValidateUserDataBase", ReplyAction="http://tempuri.org/IService1/ValidateUserDataBaseResponse")]
        int ValidateUserDataBase(string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ValidateUserDataBase", ReplyAction="http://tempuri.org/IService1/ValidateUserDataBaseResponse")]
        System.Threading.Tasks.Task<int> ValidateUserDataBaseAsync(string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ValidateUserFile", ReplyAction="http://tempuri.org/IService1/ValidateUserFileResponse")]
        bool ValidateUserFile(string email, string password, string FilePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ValidateUserFile", ReplyAction="http://tempuri.org/IService1/ValidateUserFileResponse")]
        System.Threading.Tasks.Task<bool> ValidateUserFileAsync(string email, string password, string FilePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/decrypt", ReplyAction="http://tempuri.org/IService1/decryptResponse")]
        string decrypt(string encryptedText, string key, string iv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/decrypt", ReplyAction="http://tempuri.org/IService1/decryptResponse")]
        System.Threading.Tasks.Task<string> decryptAsync(string encryptedText, string key, string iv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Validateadmin", ReplyAction="http://tempuri.org/IService1/ValidateadminResponse")]
        int Validateadmin(string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Validateadmin", ReplyAction="http://tempuri.org/IService1/ValidateadminResponse")]
        System.Threading.Tasks.Task<int> ValidateadminAsync(string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/StoreUser", ReplyAction="http://tempuri.org/IService1/StoreUserResponse")]
        void StoreUser(practice_project.ServiceReference4.UserDetails userdetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/StoreUser", ReplyAction="http://tempuri.org/IService1/StoreUserResponse")]
        System.Threading.Tasks.Task StoreUserAsync(practice_project.ServiceReference4.UserDetails userdetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getdet", ReplyAction="http://tempuri.org/IService1/getdetResponse")]
        practice_project.ServiceReference4.UserDetails getdet(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getdet", ReplyAction="http://tempuri.org/IService1/getdetResponse")]
        System.Threading.Tasks.Task<practice_project.ServiceReference4.UserDetails> getdetAsync(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/storeReport", ReplyAction="http://tempuri.org/IService1/storeReportResponse")]
        int storeReport(string val);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/storeReport", ReplyAction="http://tempuri.org/IService1/storeReportResponse")]
        System.Threading.Tasks.Task<int> storeReportAsync(string val);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : practice_project.ServiceReference4.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<practice_project.ServiceReference4.IService1>, practice_project.ServiceReference4.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int ValidateUserDataBase(string password, string email) {
            return base.Channel.ValidateUserDataBase(password, email);
        }
        
        public System.Threading.Tasks.Task<int> ValidateUserDataBaseAsync(string password, string email) {
            return base.Channel.ValidateUserDataBaseAsync(password, email);
        }
        
        public bool ValidateUserFile(string email, string password, string FilePath) {
            return base.Channel.ValidateUserFile(email, password, FilePath);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateUserFileAsync(string email, string password, string FilePath) {
            return base.Channel.ValidateUserFileAsync(email, password, FilePath);
        }
        
        public string decrypt(string encryptedText, string key, string iv) {
            return base.Channel.decrypt(encryptedText, key, iv);
        }
        
        public System.Threading.Tasks.Task<string> decryptAsync(string encryptedText, string key, string iv) {
            return base.Channel.decryptAsync(encryptedText, key, iv);
        }
        
        public int Validateadmin(string password, string email) {
            return base.Channel.Validateadmin(password, email);
        }
        
        public System.Threading.Tasks.Task<int> ValidateadminAsync(string password, string email) {
            return base.Channel.ValidateadminAsync(password, email);
        }
        
        public void StoreUser(practice_project.ServiceReference4.UserDetails userdetails) {
            base.Channel.StoreUser(userdetails);
        }
        
        public System.Threading.Tasks.Task StoreUserAsync(practice_project.ServiceReference4.UserDetails userdetails) {
            return base.Channel.StoreUserAsync(userdetails);
        }
        
        public practice_project.ServiceReference4.UserDetails getdet(string username, string password, string email) {
            return base.Channel.getdet(username, password, email);
        }
        
        public System.Threading.Tasks.Task<practice_project.ServiceReference4.UserDetails> getdetAsync(string username, string password, string email) {
            return base.Channel.getdetAsync(username, password, email);
        }
        
        public int storeReport(string val) {
            return base.Channel.storeReport(val);
        }
        
        public System.Threading.Tasks.Task<int> storeReportAsync(string val) {
            return base.Channel.storeReportAsync(val);
        }
    }
}
